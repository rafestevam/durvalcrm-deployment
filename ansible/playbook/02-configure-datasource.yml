---
- name: Configure PostgreSQL DataSource for DurvalCRM in WildFly
  hosts: vm-dev
  become: yes
  vars:
    wildfly_home: "/opt/wildfly"
    db_host: "localhost"
    db_port: "5432"
    db_name: "durvalcrm_db"
    db_user: "durvalcrm_dev"
    db_password: "durvalcrm@123"
    datasource_name: "DurvalCRMDS"
    postgresql_version: "42.7.3"

  tasks:
    - name: Download PostgreSQL JDBC driver if not exists
      get_url:
        url: "https://jdbc.postgresql.org/download/postgresql-{{ postgresql_version }}.jar"
        dest: "/tmp/postgresql-{{ postgresql_version }}.jar"
        mode: '0644'

    - name: Create WildFly CLI script for PostgreSQL module
      copy:
        dest: "/tmp/add-postgresql-module.cli"
        content: |
          embed-server --server-config=standalone.xml
          
          # Remove existing PostgreSQL module if exists
          if (outcome == success) of /subsystem=datasources/jdbc-driver=postgresql:read-resource
              /subsystem=datasources/jdbc-driver=postgresql:remove
          end-if
          
          # Create PostgreSQL module directory
          module add --name=org.postgresql --dependencies=javax.api,javax.transaction.api --resources=/tmp/postgresql-{{ postgresql_version }}.jar
          
          # Add PostgreSQL JDBC driver
          /subsystem=datasources/jdbc-driver=postgresql:add(driver-name="postgresql",driver-module-name="org.postgresql",driver-class-name="org.postgresql.Driver")
          
          stop-embedded-server
        mode: '0644'

    - name: Create WildFly CLI script for DataSource configuration
      copy:
        dest: "/tmp/configure-datasource.cli"
        content: |
          embed-server --server-config=standalone.xml
          
          # Remove existing DataSource if exists
          if (outcome == success) of /subsystem=datasources/data-source={{ datasource_name }}:read-resource
              /subsystem=datasources/data-source={{ datasource_name }}:remove
          end-if
          
          # Add PostgreSQL DataSource
          /subsystem=datasources/data-source={{ datasource_name }}:add( \
              jndi-name="java:jboss/datasources/{{ datasource_name }}", \
              driver-name="postgresql", \
              connection-url="jdbc:postgresql://{{ db_host }}:{{ db_port }}/{{ db_name }}", \
              user-name="{{ db_user }}", \
              password="{{ db_password }}", \
              min-pool-size=10, \
              max-pool-size=50, \
              pool-prefill=true, \
              transaction-isolation=TRANSACTION_READ_COMMITTED, \
              check-valid-connection-sql="SELECT 1", \
              validate-on-match=false, \
              background-validation=true, \
              background-validation-millis=60000, \
              flush-strategy=FailingConnectionOnly, \
              statistics-enabled=true \
          )
          
          # Enable the DataSource
          /subsystem=datasources/data-source={{ datasource_name }}:enable
          
          stop-embedded-server
        mode: '0644'

    - name: Stop WildFly for configuration
      systemd:
        name: wildfly
        state: stopped
      ignore_errors: yes

    - name: Wait for WildFly to stop
      wait_for:
        port: 9990
        host: "127.0.0.1"
        state: stopped
        timeout: 30
      ignore_errors: yes

    - name: Configure PostgreSQL module in WildFly
      shell: |
        cd {{ wildfly_home }}
        ./bin/jboss-cli.sh --file=/tmp/add-postgresql-module.cli
      become_user: wildfly
      register: module_config_result
      ignore_errors: yes

    - name: Configure DataSource in WildFly
      shell: |
        cd {{ wildfly_home }}
        ./bin/jboss-cli.sh --file=/tmp/configure-datasource.cli
      become_user: wildfly
      register: datasource_config_result
      ignore_errors: yes

    - name: Start WildFly after configuration
      systemd:
        name: wildfly
        state: started

    - name: Wait for WildFly to start
      wait_for:
        port: 9990
        host: "127.0.0.1"
        timeout: 60
        delay: 10

    - name: Test DataSource connection
      shell: |
        cd {{ wildfly_home }}
        ./bin/jboss-cli.sh --connect --controller=127.0.0.1:9990 \
          --command="/subsystem=datasources/data-source={{ datasource_name }}:test-connection-in-pool"
      become_user: wildfly
      register: connection_test_result
      ignore_errors: yes

    - name: Display configuration results
      debug:
        msg: |
          =================================
          PostgreSQL DataSource Configuration Results:
          =================================
          - Module Configuration: {{ 'Success' if module_config_result is succeeded else 'Failed' }}
          - DataSource Configuration: {{ 'Success' if datasource_config_result is succeeded else 'Failed' }}
          - Connection Test: {{ 'Success' if connection_test_result is succeeded else 'Failed - but DataSource is configured' }}
          
          DataSource Details:
          - Name: {{ datasource_name }}
          - JNDI: java:jboss/datasources/{{ datasource_name }}
          - Database: {{ db_name }}@{{ db_host }}:{{ db_port }}
          - User: {{ db_user }}
          
          Next Steps:
          - DataSource is ready for application deployment
          - Deploy durvalcrm.war using: mvn wildfly:deploy -Pprod

    - name: Clean up temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/add-postgresql-module.cli"
        - "/tmp/configure-datasource.cli"
        - "/tmp/postgresql-{{ postgresql_version }}.jar"
      ignore_errors: yes